@@ -1,12 +1,14 @@
 PARSER_BEGIN(Beah)
 
 public class Beah {
+	
     public static void main(String[] args) throws ParseException, Exception
 	{
 	try {
         Beah start = new Beah(System.in);
 		while (true)
-			{ start.Input(); }
+			{ start.Verif2();
+			System.out.println("<(\")happy!"); System.exit(-1);}
 		}
 		
 	catch(ParseException e)
 @@ -22,14 +24,15 @@ PARSER_END(Beah)
 
 SKIP:  { " "|"\t" | "\r"  }
                 
-TOKEN: { <NUMBER: (("-")? <INT>) | (("-")? <INT> "." <INT>)| <ZERO> >}
+TOKEN: { <#NUMBER: (("-")? <INT>) | (("-")? <INT> "." <INT>)| <ZERO> >}
 TOKEN: { <VARIABLE: (<ID>)+ >}
+TOKEN: { <TERM: (<ID>)+|<NUMBER> >}
 TOKEN: {<#INT: (["0"-"9"])+ >}
 TOKEN: {<#ZERO: "0" >}
 TOKEN: {<#ID: ["a"-"z","A"-"Z"]> }
 TOKEN: {<TERMINATOR: "<(^)">}
 TOKEN: {<EOP: "('^')">}
-TOKEN: {< EOL: "\n" >}
+TOKEN: {< EOL: ("\n")? >}
 TOKEN : 
 { 
 	  <ASSIGN : "=">  
 @@ -51,18 +54,57 @@ TOKEN:
 	
 }
 
-void Input() :
-{}
-{   
-     Verif() ("\n")* 
-	 |<EOP> {System.out.println("<(\")happy!"); System.exit(-1);}
-	 |<EOL>
-	 |<EOF>
-}
 
 void Verif():
 {}
 {
-< VARIABLE >< ASSIGN >(<VARIABLE> | < NUMBER >)(( <PLUS> | <MINUS> | <MULTIPLY> | <DIVIDE> )(<VARIABLE> | < NUMBER >))?<TERMINATOR>
+< VARIABLE >< ASSIGN >(<TERM>)(( <PLUS> | <MINUS> | <MULTIPLY> | <DIVIDE> )(<TERM>))?<TERMINATOR>
+}
+
+void Verif2():
+
+{Token t=null;
+int i;
+int value=0;}
+{
+((< VARIABLE > < ASSIGN >
+t=<TERM>
+{i=Integer.parseInt(t.image); }
+{value=i; }
+(
+ <PLUS> 
+ t=<TERM>
+ {i=Integer.parseInt(t.image); }
+ {value+=i; }
+ 
+ |
+ <MINUS>
+ t=<TERM>
+ {i=Integer.parseInt(t.image); }
+ {value-=i; }
+ 
+ |
+ <MULTIPLY>
+ t=<TERM>
+ {i=Integer.parseInt(t.image); }
+ {value*=i; }
+
+ |
+ <DIVIDE>
+ t=<TERM>
+ {i=Integer.parseInt(t.image); }
+ {value/=i; }
+ 
+ )* <TERMINATOR> {System.out.println(value);} <EOL>)*)
+ (<EOL>)* 
+ <EOP>
+
 }
 
+
+/* Input:
+a=4+7 <(^)
+b=6*7 <(^)
+c=5/3 <(^)
+('^')
+*/
